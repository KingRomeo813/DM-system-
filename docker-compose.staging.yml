# version: '3.0'
services:

  web0:
    image: chat_engine
    command: gunicorn project.wsgi:application --bind 0.0.0.0:8000 --workers 4
    build:
      context: .
    restart: unless-stopped
    volumes:
      - .:/app
    ports:
      - "8080:8080"
    # depends_on:
    #   - db
    env_file:
      - ./.env
    networks:
      - app-web-net
    dns:
      - 8.8.8.8
      - 8.8.4.4

  websocket:
    image: chat_engine
    restart: unless-stopped
    command: daphne -b 0.0.0.0 -p 8081 project.asgi:application
    build:
      context: .
    volumes:
      - .:/app
    ports:
      - "8081:8081"
    # depends_on:
    #   - db
    env_file:
      - ./.env
    networks:
      - app-web-net
    dns:
      - 8.8.8.8
      - 8.8.4.4

  # db:
  #   image: postgres:15
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  #   env_file:
  #     - ./.env
  #   networks:
  #     - app-web-net

  celery: 
    image: chat_engine
    command: celery -A project worker --loglevel=info
    build:
      context: .
    env_file:
      - ./.env
    restart: unless-stopped
    volumes:
      - .:/app
    networks:
      - app-web-net
    # depends_on:
    #   - db

  # celery_beat:
  #   image: chat_engine
  #   command: celery -A project beat --loglevel=info
  #   restart: unless-stopped
  #   env_file:
  #     - ./.env
  #   depends_on:
  #     - redis
  #   volumes:
  #     - .:/app
  #   networks:
  #     - app-web-net
  #   environment:
  #     - CELERY_BROKER_URL=redis://redis:6379/0

  redis:
    image: redis:alpine
    restart: unless-stopped
    expose: 
      - 6379
    ports:
      - "6379:6379"
    networks:
      - app-web-net
    volumes:
      - .:/app

  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./.docker/nginx/staging/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web0
    networks:
      - app-web-net

volumes:
  postgres_data:


networks:
  app-web-net: 
    driver: bridge